{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","useState","color","myStyle","className","mode","href","style","title","type","id","onClick","toggleMode","htmlFor","TextForm","text","setText","heading","value","background","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","charAt","substr","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","about","ALert","alert","role","word","lower","slice","capitalise","msg","App","setMode","setAlert","message","setTimeout","body","backgroundColor","Alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fadbb7c6.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link} from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n\r\n  const [myStyle, setMyStyle] = useState({\r\n   color : 'blue'\r\n})\r\n\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\" style ={myStyle} >{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" style ={myStyle} >Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" to=\"#\" style ={myStyle} >{props.about}</a>\r\n        </li> */}\r\n        \r\n       \r\n      </ul> \r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\"onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav> \r\n        </div>\r\n      \r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    about : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Set title first\",\r\n    about : \"Set about first\"\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    \r\n    \r\n    \r\n    const handleOnchange = (event)=>{\r\n        console.log(\"On change\");\r\n        setText (event.target.value);\r\n    }\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Converted to uppercase\");\r\n        let newText  = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert (\" Text changed to Uppercase.\" , \"success\");\r\n    }\r\n    const handleLowClick = ()=>{\r\n        console.log(\"Converted to lowercase\");\r\n        let newText  = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert (\" Text changed to lowercase.\" , \"success\");\r\n    }\r\n    // const handleTitlecasefaw = ()=>{\r\n    //     console.log(\"Converted to titlecasefaw\");\r\n    //    let i,cnt=0;\r\n    //    let newText=\"\";\r\n    //    for(i=0;i<text.length;i++){\r\n    //        if(text.charAt(i)==\" \"){\r\n    //            newText = newText + \" \" + text.charAt(cnt).toUpperCase() + text.substr(cnt+1,i-1);\r\n    //            cnt = i+1;\r\n    //          }\r\n    //      }\r\n    //                 setText (newText);\r\n    //            }\r\n           const handleTitlecase = ()=>{\r\n            let newText  =text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();\r\n            setText(newText);\r\n            props.showAlert (\" Titlecase is implemented.\" , \"success\");\r\n       }\r\n\r\n    const handleClearText = ()=>{\r\n        let newText  = '';\r\n        setText(newText);\r\n        props.showAlert (\" Text cleared successfully.\" , \"success\");\r\n    }\r\n\r\n    const handleCopyText = ()=>{\r\n        let text  = document.getElementById(\"myBox\");\r\n        text.select();\r\n       navigator.clipboard.writeText(text.value);\r\n       props.showAlert (\" Text copied successfully.\" , \"success\");\r\n   }\r\n\r\n    const [text, setText] = useState(\"Enter text\");\r\n    return (\r\n       <>\r\n       <div className=\"container\" style = {{color : props.mode==='light'?'#202e60':'white'}}>\r\n        <div className=\"mb-4\">\r\n             <label htmlFor=\"myBox\" className=\"form-label\"> <h2><u>{props.heading}</u></h2></label>\r\n             <textarea className=\"form-control\" value = {text} style = {{background : props.mode==='light'?'white':'grey'}} onChange = {handleOnchange} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n\r\n        <button className =\"btn btn-info mx-2\" onClick={handleUpClick}>\r\n           <h5> Convert to UPPER CASE</h5>\r\n        </button>\r\n\r\n        <button className =\"btn btn-info mx-2\" onClick={handleLowClick}>\r\n           <h5> Convert to lower case</h5>\r\n        </button>\r\n\r\n        <button className =\"btn btn-info mx-2\" onClick={handleTitlecase}>\r\n           <h5> Convert to Title case</h5>\r\n        </button>\r\n\r\n        {/* <button className =\"btn btn-primary mx-2\" onClick={handleTitlecasefaw}>\r\n           <h5> Convert to Title case faw</h5>\r\n        </button> */}\r\n\r\n        <button className =\"btn btn-info mx-2\" onClick={handleClearText}>\r\n           <h5> Clear Text</h5>\r\n        </button>\r\n\r\n        <button className =\"btn btn-info mx-2\" onClick={handleCopyText}>\r\n           <h5>Copy Text</h5>\r\n        </button>\r\n\r\n        </div>\r\n        <div className=\"container my-3\" style = {{color : props.mode==='light'?'#202e60':'white'}}>\r\n            <h3>Your Text Summary</h3>\r\n            <h5>{text.split(\" \").length} Words</h5>\r\n            <h5>{text.length} Characters</h5>\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction ALert(props) {\r\n\r\n    const capitalise = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n   \r\n         props.alert &&   <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalise(props.alert.type)}</strong>{props.alert.msg}\r\n \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ALert\r\n","\nimport'./App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n \nfunction App() {\n  const [mode, setMode] = useState('light') ;\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode ('dark');\n      document.body.style.backgroundColor= '#202e60';\n      showAlert (\" Dark mode has been enabled.\" , \"success\");\n    }\n\n    else\n    {\n      setMode ('light');\n      document.body.style.backgroundColor= 'white';\n      showAlert (\" Light mode has been enabled.\" , \"success\");\n    }\n  }\n\n  \n  return (\n    // <Router>\n   <div className=\"blank\">\n     <>\n     <Navbar title =\"TextUtils\" mode ={mode} toggleMode = {toggleMode} about = \"About TextUtils\"/>\n     <Alert alert = {alert}/>\n     <div className =\"container my-3\">\n     {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n         \n          <Route exact path=\"/\"> */}\n          <TextForm showAlert = {showAlert}  mode ={mode} heading = \"Enter Your Text Here\"/>\n          {/* </Route>\n        </Switch> */}\n     \n     \n     </div>\n     </>\n   </div>\n  //  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}